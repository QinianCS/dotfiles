# theme = "modus_vivendi_tinted"
# theme = "catppuccin_mocha"
[editor]
idle-timeout = 0           # Auto-completion options should appear instantly
completion-trigger-len = 1 # 0 would block tabs
completion-timeout = 5     # instant autocompletion
auto-completion = true

completion-replace = true
middle-click-paste = false
true-color = true
auto-pairs = false
color-modes = true
# default-yank-register = "+"
scrolloff = 40
preview-completion-insert = true
line-number = "relative"
mouse = true
end-of-line-diagnostics = "hint"
# text-width = 100
# whitespace.render = "none"
jump-label-alphabet = "tsrpfwvdcneiluyh,.gkbjzmx"
bufferline = "always"
cursorline = true
# cursorcolumn = false
# rulers = [80, 100]
[editor.whitespace.render]
tab = "all"
nbsp = "all"
[editor.file-picker]
hidden = false
# git-ignore = true
# git-global = false
[editor.whitespace.characters]
space = "·"
nbsp = "⍽"
tab = "→"
newline = "⏎"
tabpad = "·"  # Tabs will look like "→···" (depending on tab width)
[editor.indent-guides]
render = true
# character = "╎" # Some characters that work well: "▏", "┆", "┊", "╎"
character = "|"
skip-levels = 1
[editor.soft-wrap]
enable = true
# max-wrap = 10          # increase value to reduce forced mid-word wrapping
# max-indent-retain = 40
wrap-indicator = ""
[editor.cursor-shape]
# normal = "block"
insert = "bar"
# select = "underline"
[editor.terminal]
command = "foot"
[editor.lsp]

display-progress-messages = true
display-messages = true
display-inlay-hints = true
[editor.statusline]
left = ["mode", "spinner", "file-name"]
right = [
  "diagnostics",
  "version-control",
  "selections",
  "position",
  "file-encoding",
  "file-line-ending",
  "file-type",
]
[keys.normal.backspace]
R = ":sh cargo run"
r = ":config-reload"
c = [":cd ~/.config", ":o ~/.config"]
n = [":cd ~/n/", ":o ~/n/"]
a = [":cd ~/rust/learn", ":o ~/rust/learn"]
[keys.normal.backspace.l]
l = [":cd ~/.local", ":o ~/.local"]
s = [":cd ~/.local/share", ":o ~/.local/share"]
[keys.normal.backspace.e]
c = ":config-open"
l = ":o ~/.config/helix/languages.toml"
n = ":o ~/.config/niri/config.kdl"
r = [":cd ~/rust", ":o ~/rust"]
h = [":cd ~/", ":o ~/"]
[keys.normal.Z]
Z = ":write-quit-all"
[keys.normal."'"]
f = ":format"
i = ":toggle lsp.display-inlay-hints"
[keys.normal]
q = { q = ":bc", Q = ":bc!" }
Q = { q = ":q", Q = ":q!" }
C-p = "file_picker"
A-z = ":toggle soft-wrap.enable"
F5 = ":reload"

W = "extend_next_word_start"
B = "extend_prev_word_start"
E = "extend_next_word_end"
A-j = "join_selections"
A-k = "keep_selections"
M = ["select_mode", "match_brackets", "normal_mode"]
"#" = "toggle_comments"
A-h = "extend_to_line_start"
A-l = "extend_to_line_end"
C-v = "vsplit"
"C-," = "goto_previous_buffer"
"C-." = "goto_next_buffer"
"K" = "insert_newline"
"A-t" = "till_prev_char"
"A-f" = "find_prev_char"
"A-T" = "extend_till_prev_char"
"A-F" = "extend_prev_char"
"C-j" = "join_selections"                                            # instead of J
"$" = "extend_to_line_end"
"^" = "extend_to_line_start"
"{" = "goto_prev_paragraph"
"}" = "goto_next_paragraph"
C-r = [":insert-output scooter >/dev/tty", ":redraw", ":reload-all"]
# lazygit
C-g = [":insert-output lazygit >/dev/tty", ":redraw", ":reload-all"]
C-e = [
  ":sh rm -f /tmp/unique-file-h21a434",
  ":insert-output yazi '%{buffer_name}' --chooser-file=/tmp/unique-file-h21a434",
  ":insert-output echo \"x1b[?1049h\" > /dev/tty",
  ":open %sh{cat /tmp/unique-file-h21a434}",
  ":redraw",
]
F = { a = ":toggle file-picker.git-ignore", "." = ":toggle file-picker.hidden", F = "file_picker_in_current_directory" }
X = ["extend_line_up", "extend_to_line_bounds"]
"A-X" = "extend_line_down"
"A-x" = "extend_line_up"
S-left = "extend_char_left"
S-right = "extend_char_right"
S-up = "extend_line_up"
S-down = "extend_line_down"
S-home = "extend_to_line_start"
S-end = "extend_to_line_end"
"S-pageup" = "extend_parent_node_start"
"S-pagedown" = "extend_parent_node_end"
C-s = [":u"]
C-S = [":u", ":q"]
C-Q = [":qa!"]
C-q = [":qa"]
"C-x" = ["extend_to_line_bounds", "delete_selection"]
"C-X" = "completion"
"C-pageup" = "goto_previous_buffer"
"C-pagedown" = "goto_next_buffer"
"C-c" = ["extend_to_line_bounds", "yank"]
"C-C" = "toggle_comments"
"A-c" = "toggle_comments"
"C-/" = "toggle_comments"
################################################################################
[keys.insert]
C-A-s = "commit_undo_checkpoint"
C-b = "move_prev_word_start"
C-f = "move_next_word_end"
"C-left" = "move_prev_word_start"
"C-right" = "move_next_word_start"
"C-down" = "move_visual_line_down"
"C-up" = "move_visual_line_up"
C-a = "goto_line_start"
C-e = "goto_line_end"
C-z = "undo"
C-S-z = "redo"
S-left = "extend_char_left"
S-right = "extend_char_right"
S-up = "extend_line_up"
S-down = "extend_line_down"
S-home = "extend_to_line_start"
S-end = "extend_to_line_end"
"S-pageup" = "extend_parent_node_start"
"S-pagedown" = "extend_parent_node_end"
C-s = [":u"]
C-S = [":u", ":q"]
C-Q = [":qa!"]
C-q = [":qa"]
"C-x" = ["extend_to_line_bounds", "delete_selection"]
"C-X" = "completion"
"C-pageup" = "goto_previous_buffer"
"C-pagedown" = "goto_next_buffer"
"C-c" = ["extend_to_line_bounds", "yank"]
"C-C" = "toggle_comments"
"A-c" = "toggle_comments"
"C-/" = "toggle_comments"
